

web UI
--------

UI = content/data + style + behavior

 content  ==> HTML
 style    ==> CSS
 behavior ==> javascript

---------------------------------------------------------------------------------------

what javascript language can do on HTML-page 
in browser envi?


using w3c standard web APIs, 
javascript programs can do any dynamic actions on web-page within browser-envi


w3c standard web APIs
    ==> DOM, XHR, Timer, ...


imp-note:
   all w3c standard APIs are implemented by browser vendors nativly,
   and abstracted to us as javascript objects & functions 

using DOM API
-------------
=> for page manipulation 
 -> can create,retreive,update,delete HTML elements
 -> can change element's inner text/html content 
 -> can change element's attributes/properties
 -> can change element's styles ( css )
 -> can validate form-fields before submit to server-program
 -> can create rich UI-components like  autocomplete, calenders,..
 ....
using XHR API
--------------
 => for Async communication with server-side programs

using Timer API
----------------
 => to execute some action(s) on timeout/interval



https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5



i.e
---------------------------------------------------------------
web UI
---------------------------------------------------------------

- HTML
- CSS
- javascript
 +
- browser's APIs ( DOM , XHR/fetch , ..)

-------------------------------------------------------------

limitations of plain-javascript ( your code) with browser APIs

=>  browser compatability issues
    - https://caniuse.com/
=> memory management issues
=> performance issues
=> code organization is bad
=> too much code

-------------------------------------------------------------

soln:

   -> using third-party's javascript lib

   1. jquery

      - browser compatability issues are solved 
    
   MVC pattern based lib
   -----------------------

   1. knockout.js
   2. backbone.js
   3. ember.js
   4. Angular.js  1.x

   .......

   component based lib
   --------------------

   1. react.js
   2. Angular
   3. Vue
   4. Polymer.js
   ...

   --------------------------------------------------

   - UI using component based arch

   what is component ?

      - any UI-fragment with single-responsibility

      e.g  search,calandar,.....

      why ?

      -- smaller & simpler  => easy to manage

   --------------------------------------------------

   is HTML based on component-arch ?

   - yes

   --------------------------------------------------

   principles of component(s)
   --------------------------

   -> must have single-responsibility
      => -- smaller & simpler  => easy to manage
   -> must be loose-coupled from other   
      => easy to re-use
   -> can customize via props  
      => based on req..
   
   -> can hold state if requied 
   -> if state changes, comp must re-render  
   -> parent -> child  via props
      child  -> parent via events
      i.e uni-directional data-flow 
